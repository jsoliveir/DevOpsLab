image: 
  name: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
options:
  docker: true
definitions:
  docker-login: &docker-login |-
      docker login -u jsoliveira -p ${SECRET};
  build-client-subscriptions: &build-client-subscriptions |-
      docker build --rm apis/api-client-subscriptions/ --tag jsoliveira/api-client-subscriptions; 
      docker save --output api-client-subscriptions.img jsoliveira/api-client-subscriptions;
  build-core-subscriptions: &build-core-subscriptions |-
      docker build --rm apis/api-core-subscriptions/ --tag jsoliveira/api-core-subscriptions; 
      docker save --output api-core-subscriptions.img jsoliveira/api-core-subscriptions;
  build-core-mail: &build-core-mail |-
      docker build --rm apis/api-core-mail --tag jsoliveira/api-core-mail; 
      docker save --output api-core-mail.img jsoliveira/api-core-mail;
  build-public-gateway: &build-public-gateway |-
      docker build --rm services/gateways/public --tag jsoliveira/public-gateway; 
      docker save --output public-gateway.img jsoliveira/public-gateway;
  build-private-gateway: &build-private-gateway |-
      docker build --rm services/gateways/private --tag jsoliveira/private-gateway; 
      docker save --output private-gateway.img jsoliveira/private-gateway;
  deploy-client-subscriptions: &deploy-client-subscriptions |-
      docker load --input api-client-subscriptions.img
      docker tag jsoliveira/api-client-subscriptions jsoliveira/api-client-subscriptions:${BITBUCKET_COMMIT};
      docker push jsoliveira/api-client-subscriptions:${BITBUCKET_COMMIT};
  deploy-core-subscriptions: &deploy-core-subscriptions |-
      docker load --input api-core-subscriptions.img
      docker tag jsoliveira/api-core-subscriptions jsoliveira/api-core-subscriptions:${BITBUCKET_COMMIT};
      docker push jsoliveira/api-core-subscriptions:${BITBUCKET_COMMIT};
  deploy-core-mail: &deploy-core-mail |-
      docker load --input api-core-mail.img
      docker tag jsoliveira/api-core-mail jsoliveira/api-core-mail:${BITBUCKET_COMMIT};
      docker push jsoliveira/api-core-mail:${BITBUCKET_COMMIT};
  deploy-public-gateway: &deploy-public-gateway |-
      docker load --input public-gateway.img
      docker tag jsoliveira/public-gateway jsoliveira/public-gateway:${BITBUCKET_COMMIT};
      docker push jsoliveira/public-gateway:${BITBUCKET_COMMIT};
  deploy-private-gateway: &deploy-private-gateway |-
      docker load --input private-gateway.img
      docker tag jsoliveira/private-gateway jsoliveira/private-gateway:${BITBUCKET_COMMIT};
      docker push jsoliveira/private-gateway:${BITBUCKET_COMMIT};
  unit-testing: &unit-testing |-
    for p in $(find -iname *test*.csproj); do \
      dotnet add $p package JUnitTestLogger || true;
      dotnet test $p -r "./test-results/" \
        --logger:"junit;LogFilePath=test-results/results.xml" \
        --logger:"console;verbosity=detailed" || true; done;
pipelines:
  branches: 
    '{master,develop}':
        - step: 
            name: "Unit testing"
            script: 
              - *unit-testing
        - parallel:
          - step: 
              name: "Build client.subscriptions"
              script: 
                - *build-client-subscriptions
              artifacts:
                - '*.img'
          - step: 
              name: "Build core.subscriptions"
              script: 
                - *build-core-subscriptions
              artifacts:
                - '*.img'
          - step: 
              name: "Build core.mail"
              script: 
                - *build-core-mail
              artifacts:
                - '*.img'
          - step: 
              name: "Build private gateway"
              script: 
                - *build-private-gateway
              artifacts:
                - '*.img'
          - step: 
              name: "Build public gateway"
              script: 
                - *build-public-gateway
              artifacts:
                - '*.img'
        - parallel:
          - step: 
              name: "Deploy client.subscriptions"
              script: 
                - *docker-login
                - *deploy-client-subscriptions
          - step: 
              name: "Deploy core.subscriptions"
              script: 
                - *docker-login
                - *deploy-core-subscriptions
          - step: 
              name: "Deploy core.mail"
              script: 
                - *docker-login
                - *deploy-core-mail
          - step: 
              name: "Deploy private gateway"
              script: 
                - *docker-login
                - *deploy-private-gateway
          - step: 
              name: "Deploy public gateway"
              script: 
                - *docker-login
                - *deploy-public-gateway
        - step: 
            name: "Deploy to production"
            trigger: manual
            script: 
              - *docker-login
              - *deploy-client-subscriptions
              - *deploy-core-subscriptions
              - *deploy-core-mail
              - *deploy-public-gateway
              - *deploy-private-gateway
          